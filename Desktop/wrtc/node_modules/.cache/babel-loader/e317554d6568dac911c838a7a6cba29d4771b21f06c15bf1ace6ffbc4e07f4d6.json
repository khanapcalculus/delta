{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\wrtc\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ConnectionPanel from './components/ConnectionPanel';\nimport Whiteboard from './components/Whiteboard';\nimport WebRTCManager from './services/WebRTCManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [webrtcManager] = useState(() => new WebRTCManager());\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [debugLogs, setDebugLogs] = useState([]);\n  useEffect(() => {\n    // Set up WebRTC event handlers\n    webrtcManager.onConnectionStateChange = state => {\n      console.log(`Connection state changed: ${state}`);\n      setConnectionState(state);\n    };\n    webrtcManager.onDebugLog = message => {\n      setDebugLogs(prev => {\n        const newLogs = [...prev, {\n          message,\n          timestamp: Date.now()\n        }];\n        return newLogs.slice(-20); // Keep only last 20 logs\n      });\n    };\n    return () => {\n      webrtcManager.cleanup();\n    };\n  }, [webrtcManager]);\n  const handleConnect = async (roomId, isHost) => {\n    console.log(`Attempting to connect to room: ${roomId} as ${isHost ? 'HOST' : 'GUEST'}`);\n    setConnectionState('connecting');\n    try {\n      const result = await webrtcManager.joinRoom(roomId);\n      console.log('Connection result:', result);\n    } catch (error) {\n      console.error('Connection failed:', error);\n      setConnectionState('disconnected');\n      throw error;\n    }\n  };\n  const handleDisconnect = () => {\n    console.log('Disconnecting...');\n    webrtcManager.cleanup();\n    setConnectionState('disconnected');\n    setDebugLogs([]);\n  };\n  const clearDebugLogs = () => {\n    setDebugLogs([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFA8 WebRTC Whiteboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: connectionState,\n          children: [connectionState === 'connected' && '🟢 Connected', connectionState === 'connecting' && '🟡 Connecting...', connectionState === 'disconnected' && '🔴 Disconnected', connectionState === 'failed' && '❌ Connection Failed']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), connectionState === 'connected' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"debug-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"disconnect-btn\",\n            onClick: handleDisconnect,\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), connectionState === 'connected' ? /*#__PURE__*/_jsxDEV(Whiteboard, {\n      webrtcManager: webrtcManager\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ConnectionPanel, {\n      onConnect: handleConnect,\n      onDisconnect: handleDisconnect,\n      connectionState: connectionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), debugLogs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '10px',\n        right: '10px',\n        width: '300px',\n        maxHeight: '200px',\n        background: 'rgba(0,0,0,0.8)',\n        color: 'white',\n        padding: '10px',\n        borderRadius: '5px',\n        fontSize: '12px',\n        overflow: 'auto',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearDebugLogs,\n          style: {\n            background: 'none',\n            border: 'none',\n            color: 'white',\n            cursor: 'pointer',\n            fontSize: '10px'\n          },\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), debugLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '2px',\n          fontSize: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#888'\n          },\n          children: new Date(log.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), ' ', log.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8Yn1dPiD5h3rIRca40F2sszXabQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ConnectionPanel","Whiteboard","WebRTCManager","jsxDEV","_jsxDEV","App","_s","webrtcManager","connectionState","setConnectionState","debugLogs","setDebugLogs","onConnectionStateChange","state","console","log","onDebugLog","message","prev","newLogs","timestamp","Date","now","slice","cleanup","handleConnect","roomId","isHost","result","joinRoom","error","handleDisconnect","clearDebugLogs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onConnect","onDisconnect","length","style","position","bottom","right","width","maxHeight","background","color","padding","borderRadius","fontSize","overflow","zIndex","display","justifyContent","marginBottom","border","cursor","map","index","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/wrtc/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ConnectionPanel from './components/ConnectionPanel';\nimport Whiteboard from './components/Whiteboard';\nimport WebRTCManager from './services/WebRTCManager';\n\nfunction App() {\n  const [webrtcManager] = useState(() => new WebRTCManager());\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [debugLogs, setDebugLogs] = useState([]);\n\n  useEffect(() => {\n    // Set up WebRTC event handlers\n    webrtcManager.onConnectionStateChange = (state) => {\n      console.log(`Connection state changed: ${state}`);\n      setConnectionState(state);\n    };\n\n    webrtcManager.onDebugLog = (message) => {\n      setDebugLogs(prev => {\n        const newLogs = [...prev, { message, timestamp: Date.now() }];\n        return newLogs.slice(-20); // Keep only last 20 logs\n      });\n    };\n\n    return () => {\n      webrtcManager.cleanup();\n    };\n  }, [webrtcManager]);\n\n  const handleConnect = async (roomId, isHost) => {\n    console.log(`Attempting to connect to room: ${roomId} as ${isHost ? 'HOST' : 'GUEST'}`);\n    setConnectionState('connecting');\n    \n    try {\n      const result = await webrtcManager.joinRoom(roomId);\n      console.log('Connection result:', result);\n    } catch (error) {\n      console.error('Connection failed:', error);\n      setConnectionState('disconnected');\n      throw error;\n    }\n  };\n\n  const handleDisconnect = () => {\n    console.log('Disconnecting...');\n    webrtcManager.cleanup();\n    setConnectionState('disconnected');\n    setDebugLogs([]);\n  };\n\n  const clearDebugLogs = () => {\n    setDebugLogs([]);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-header\">\n        <h1>🎨 WebRTC Whiteboard</h1>\n        <div className=\"connection-status\">\n          <span className={connectionState}>\n            {connectionState === 'connected' && '🟢 Connected'}\n            {connectionState === 'connecting' && '🟡 Connecting...'}\n            {connectionState === 'disconnected' && '🔴 Disconnected'}\n            {connectionState === 'failed' && '❌ Connection Failed'}\n          </span>\n          \n          {connectionState === 'connected' && (\n            <div className=\"debug-controls\">\n              <button className=\"disconnect-btn\" onClick={handleDisconnect}>\n                Disconnect\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {connectionState === 'connected' ? (\n        <Whiteboard webrtcManager={webrtcManager} />\n      ) : (\n        <ConnectionPanel \n          onConnect={handleConnect} \n          onDisconnect={handleDisconnect}\n          connectionState={connectionState}\n        />\n      )}\n\n      {/* Debug logs - can be hidden in production */}\n      {debugLogs.length > 0 && (\n        <div style={{\n          position: 'fixed',\n          bottom: '10px',\n          right: '10px',\n          width: '300px',\n          maxHeight: '200px',\n          background: 'rgba(0,0,0,0.8)',\n          color: 'white',\n          padding: '10px',\n          borderRadius: '5px',\n          fontSize: '12px',\n          overflow: 'auto',\n          zIndex: 1000\n        }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n            <strong>Debug Logs</strong>\n            <button \n              onClick={clearDebugLogs}\n              style={{ \n                background: 'none', \n                border: 'none', \n                color: 'white', \n                cursor: 'pointer',\n                fontSize: '10px'\n              }}\n            >\n              ✖\n            </button>\n          </div>\n          {debugLogs.map((log, index) => (\n            <div key={index} style={{ marginBottom: '2px', fontSize: '10px' }}>\n              <span style={{ color: '#888' }}>\n                {new Date(log.timestamp).toLocaleTimeString()}\n              </span>\n              {' '}{log.message}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}