{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\wrtc\\\\src\\\\components\\\\Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Layer, Line, Stage } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = ({\n  tool,\n  color,\n  strokeWidth,\n  onDrawing,\n  drawingData\n}) => {\n  _s();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentPath, setCurrentPath] = useState([]);\n  const stageRef = useRef();\n  const lastPointRef = useRef(null);\n\n  // Function to interpolate points for smoother lines\n  const interpolatePoints = (lastPoint, currentPoint) => {\n    const points = [];\n    if (!lastPoint) return [currentPoint.x, currentPoint.y];\n    const dx = currentPoint.x - lastPoint.x;\n    const dy = currentPoint.y - lastPoint.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    // If points are far apart, interpolate between them\n    if (distance > 5) {\n      const steps = Math.max(2, Math.floor(distance / 3));\n      for (let i = 1; i <= steps; i++) {\n        const t = i / steps;\n        const x = lastPoint.x + dx * t;\n        const y = lastPoint.y + dy * t;\n        points.push(x, y);\n      }\n    } else {\n      points.push(currentPoint.x, currentPoint.y);\n    }\n    return points;\n  };\n  const handleMouseDown = useCallback(e => {\n    if (tool !== 'pen') return;\n\n    // Prevent stage dragging\n    e.target.getStage().draggable(false);\n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    const newPath = [pos.x, pos.y];\n    setCurrentPath(newPath);\n    lastPointRef.current = {\n      x: pos.x,\n      y: pos.y\n    };\n  }, [tool]);\n  const handleMouseMove = useCallback(e => {\n    var _e$evt;\n    if (!isDrawing || tool !== 'pen') return;\n\n    // Prevent default touch behaviors\n    (_e$evt = e.evt) === null || _e$evt === void 0 ? void 0 : _e$evt.preventDefault();\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n\n    // Interpolate points for smoother drawing\n    const interpolatedPoints = interpolatePoints(lastPointRef.current, point);\n    const newPath = [...currentPath, ...interpolatedPoints];\n    setCurrentPath(newPath);\n    lastPointRef.current = {\n      x: point.x,\n      y: point.y\n    };\n  }, [isDrawing, tool, currentPath]);\n  const handleMouseUp = useCallback(e => {\n    var _e$evt2;\n    if (!isDrawing || tool !== 'pen' || currentPath.length < 4) {\n      setIsDrawing(false);\n      setCurrentPath([]);\n      lastPointRef.current = null;\n      return;\n    }\n\n    // Prevent default touch behaviors\n    (_e$evt2 = e.evt) === null || _e$evt2 === void 0 ? void 0 : _e$evt2.preventDefault();\n\n    // Optimize stroke data - remove redundant points for network efficiency\n    const optimizedPoints = currentPath.filter((_, index) => {\n      // Keep every point for strokes with few points, every 2nd point for longer strokes\n      return currentPath.length <= 20 || index % 2 === 0;\n    });\n    const newStroke = {\n      id: Date.now() + Math.random(),\n      points: optimizedPoints,\n      color: color,\n      strokeWidth: strokeWidth,\n      tool: tool,\n      timestamp: Date.now()\n    };\n    onDrawing(newStroke);\n    setIsDrawing(false);\n    setCurrentPath([]);\n    lastPointRef.current = null;\n  }, [isDrawing, tool, currentPath, color, strokeWidth, onDrawing]);\n\n  // Combine drawing data with current drawing path\n  const allLines = [...drawingData, ...(isDrawing && currentPath.length > 0 ? [{\n    id: 'current',\n    points: currentPath,\n    color: color,\n    strokeWidth: strokeWidth,\n    tool: tool\n  }] : [])];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard\",\n    style: {\n      flex: 1,\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: 1200,\n      height: 2400,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      onTouchStart: handleMouseDown,\n      onTouchMove: handleMouseMove,\n      onTouchEnd: handleMouseUp,\n      ref: stageRef,\n      draggable: false,\n      listening: true,\n      style: {\n        border: '2px solid #ddd',\n        background: 'white',\n        cursor: tool === 'pen' ? 'crosshair' : 'default',\n        touchAction: 'none' // Prevent scrolling/zooming on touch\n      },\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: allLines.map(line => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: line.color || '#000000',\n          strokeWidth: line.strokeWidth || 2,\n          tension: 0.3,\n          lineCap: \"round\",\n          lineJoin: \"round\",\n          globalCompositeOperation: \"source-over\",\n          perfectDrawEnabled: false,\n          shadowForStrokeEnabled: false,\n          hitStrokeWidth: 0\n        }, line.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"EIBXKa0tep+mgsRPmrTue5w9c2E=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useCallback","useRef","useState","Layer","Line","Stage","jsxDEV","_jsxDEV","Whiteboard","tool","color","strokeWidth","onDrawing","drawingData","_s","isDrawing","setIsDrawing","currentPath","setCurrentPath","stageRef","lastPointRef","interpolatePoints","lastPoint","currentPoint","points","x","y","dx","dy","distance","Math","sqrt","steps","max","floor","i","t","push","handleMouseDown","e","target","getStage","draggable","pos","getPointerPosition","newPath","current","handleMouseMove","_e$evt","evt","preventDefault","stage","point","interpolatedPoints","handleMouseUp","_e$evt2","length","optimizedPoints","filter","_","index","newStroke","id","Date","now","random","timestamp","allLines","className","style","flex","overflow","children","width","height","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","ref","listening","border","background","cursor","touchAction","map","line","stroke","tension","lineCap","lineJoin","globalCompositeOperation","perfectDrawEnabled","shadowForStrokeEnabled","hitStrokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/wrtc/src/components/Whiteboard.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport { Layer, Line, Stage } from 'react-konva';\n\nconst Whiteboard = ({ tool, color, strokeWidth, onDrawing, drawingData }) => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentPath, setCurrentPath] = useState([]);\n  const stageRef = useRef();\n  const lastPointRef = useRef(null);\n\n  // Function to interpolate points for smoother lines\n  const interpolatePoints = (lastPoint, currentPoint) => {\n    const points = [];\n    if (!lastPoint) return [currentPoint.x, currentPoint.y];\n    \n    const dx = currentPoint.x - lastPoint.x;\n    const dy = currentPoint.y - lastPoint.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    \n    // If points are far apart, interpolate between them\n    if (distance > 5) {\n      const steps = Math.max(2, Math.floor(distance / 3));\n      for (let i = 1; i <= steps; i++) {\n        const t = i / steps;\n        const x = lastPoint.x + dx * t;\n        const y = lastPoint.y + dy * t;\n        points.push(x, y);\n      }\n    } else {\n      points.push(currentPoint.x, currentPoint.y);\n    }\n    \n    return points;\n  };\n\n  const handleMouseDown = useCallback((e) => {\n    if (tool !== 'pen') return;\n    \n    // Prevent stage dragging\n    e.target.getStage().draggable(false);\n    \n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    const newPath = [pos.x, pos.y];\n    setCurrentPath(newPath);\n    lastPointRef.current = { x: pos.x, y: pos.y };\n  }, [tool]);\n\n  const handleMouseMove = useCallback((e) => {\n    if (!isDrawing || tool !== 'pen') return;\n\n    // Prevent default touch behaviors\n    e.evt?.preventDefault();\n    \n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    \n    // Interpolate points for smoother drawing\n    const interpolatedPoints = interpolatePoints(lastPointRef.current, point);\n    const newPath = [...currentPath, ...interpolatedPoints];\n    \n    setCurrentPath(newPath);\n    lastPointRef.current = { x: point.x, y: point.y };\n  }, [isDrawing, tool, currentPath]);\n\n  const handleMouseUp = useCallback((e) => {\n    if (!isDrawing || tool !== 'pen' || currentPath.length < 4) {\n      setIsDrawing(false);\n      setCurrentPath([]);\n      lastPointRef.current = null;\n      return;\n    }\n\n    // Prevent default touch behaviors\n    e.evt?.preventDefault();\n\n    // Optimize stroke data - remove redundant points for network efficiency\n    const optimizedPoints = currentPath.filter((_, index) => {\n      // Keep every point for strokes with few points, every 2nd point for longer strokes\n      return currentPath.length <= 20 || index % 2 === 0;\n    });\n\n    const newStroke = {\n      id: Date.now() + Math.random(),\n      points: optimizedPoints,\n      color: color,\n      strokeWidth: strokeWidth,\n      tool: tool,\n      timestamp: Date.now()\n    };\n\n    onDrawing(newStroke);\n    setIsDrawing(false);\n    setCurrentPath([]);\n    lastPointRef.current = null;\n  }, [isDrawing, tool, currentPath, color, strokeWidth, onDrawing]);\n\n  // Combine drawing data with current drawing path\n  const allLines = [\n    ...drawingData,\n    ...(isDrawing && currentPath.length > 0 ? [{\n      id: 'current',\n      points: currentPath,\n      color: color,\n      strokeWidth: strokeWidth,\n      tool: tool\n    }] : [])\n  ];\n\n  return (\n    <div className=\"whiteboard\" style={{ flex: 1, overflow: 'hidden' }}>\n      <Stage\n        width={1200}\n        height={2400}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        ref={stageRef}\n        draggable={false}\n        listening={true}\n        style={{ \n          border: '2px solid #ddd',\n          background: 'white',\n          cursor: tool === 'pen' ? 'crosshair' : 'default',\n          touchAction: 'none' // Prevent scrolling/zooming on touch\n        }}\n      >\n        <Layer>\n          {allLines.map((line) => (\n            <Line\n              key={line.id}\n              points={line.points}\n              stroke={line.color || '#000000'}\n              strokeWidth={(line.strokeWidth || 2)}\n              tension={0.3}\n              lineCap=\"round\"\n              lineJoin=\"round\"\n              globalCompositeOperation=\"source-over\"\n              perfectDrawEnabled={false}\n              shadowForStrokeEnabled={false}\n              hitStrokeWidth={0}\n            />\n          ))}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}