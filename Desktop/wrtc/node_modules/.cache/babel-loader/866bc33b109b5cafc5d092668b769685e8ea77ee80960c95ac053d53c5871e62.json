{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\wrtc\\\\src\\\\components\\\\Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Layer, Line, Stage } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = ({\n  tool,\n  color,\n  strokeWidth,\n  onDrawing,\n  drawingData\n}) => {\n  _s();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentPath, setCurrentPath] = useState([]);\n  const stageRef = useRef();\n  const handleMouseDown = useCallback(e => {\n    if (tool !== 'pen') return;\n\n    // Prevent stage dragging\n    e.target.getStage().draggable(false);\n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    setCurrentPath([pos.x, pos.y]);\n  }, [tool]);\n  const handleMouseMove = useCallback(e => {\n    var _e$evt;\n    if (!isDrawing || tool !== 'pen') return;\n\n    // Prevent default touch behaviors\n    (_e$evt = e.evt) === null || _e$evt === void 0 ? void 0 : _e$evt.preventDefault();\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n\n    // Add point only if it's different enough from the last point (reduces jitter)\n    setCurrentPath(prev => {\n      if (prev.length >= 2) {\n        const lastX = prev[prev.length - 2];\n        const lastY = prev[prev.length - 1];\n        const distance = Math.sqrt((point.x - lastX) ** 2 + (point.y - lastY) ** 2);\n\n        // Only add point if moved enough (reduces noise)\n        if (distance > 1) {\n          return [...prev, point.x, point.y];\n        }\n        return prev;\n      }\n      return [...prev, point.x, point.y];\n    });\n  }, [isDrawing, tool]);\n  const handleMouseUp = useCallback(e => {\n    var _e$evt2;\n    if (!isDrawing || tool !== 'pen') {\n      setIsDrawing(false);\n      setCurrentPath([]);\n      return;\n    }\n\n    // Prevent default touch behaviors\n    (_e$evt2 = e.evt) === null || _e$evt2 === void 0 ? void 0 : _e$evt2.preventDefault();\n    if (currentPath.length >= 4) {\n      const newStroke = {\n        id: Date.now() + Math.random(),\n        points: currentPath,\n        color: color,\n        strokeWidth: strokeWidth,\n        tool: tool,\n        timestamp: Date.now()\n      };\n      onDrawing(newStroke);\n    }\n    setIsDrawing(false);\n    setCurrentPath([]);\n  }, [isDrawing, tool, currentPath, color, strokeWidth, onDrawing]);\n\n  // Combine drawing data with current drawing path\n  const allLines = [...drawingData, ...(isDrawing && currentPath.length >= 4 ? [{\n    id: 'current',\n    points: currentPath,\n    color: color,\n    strokeWidth: strokeWidth,\n    tool: tool\n  }] : [])];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard\",\n    style: {\n      flex: 1,\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: 1200,\n      height: 2400,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      onTouchStart: handleMouseDown,\n      onTouchMove: handleMouseMove,\n      onTouchEnd: handleMouseUp,\n      ref: stageRef,\n      draggable: false,\n      style: {\n        border: '2px solid #ddd',\n        background: 'white',\n        cursor: tool === 'pen' ? 'crosshair' : 'default',\n        touchAction: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: allLines.map(line => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: line.color || '#000000',\n          strokeWidth: line.strokeWidth || 2,\n          tension: 0.5,\n          lineCap: \"round\",\n          lineJoin: \"round\",\n          globalCompositeOperation: \"source-over\",\n          perfectDrawEnabled: false,\n          shadowForStrokeEnabled: false\n        }, line.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"56nT10cAGWMyx5V7k892EVjTTBA=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useCallback","useRef","useState","Layer","Line","Stage","jsxDEV","_jsxDEV","Whiteboard","tool","color","strokeWidth","onDrawing","drawingData","_s","isDrawing","setIsDrawing","currentPath","setCurrentPath","stageRef","handleMouseDown","e","target","getStage","draggable","pos","getPointerPosition","x","y","handleMouseMove","_e$evt","evt","preventDefault","stage","point","prev","length","lastX","lastY","distance","Math","sqrt","handleMouseUp","_e$evt2","newStroke","id","Date","now","random","points","timestamp","allLines","className","style","flex","overflow","children","width","height","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","ref","border","background","cursor","touchAction","map","line","stroke","tension","lineCap","lineJoin","globalCompositeOperation","perfectDrawEnabled","shadowForStrokeEnabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/wrtc/src/components/Whiteboard.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport { Layer, Line, Stage } from 'react-konva';\n\nconst Whiteboard = ({ tool, color, strokeWidth, onDrawing, drawingData }) => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentPath, setCurrentPath] = useState([]);\n  const stageRef = useRef();\n\n  const handleMouseDown = useCallback((e) => {\n    if (tool !== 'pen') return;\n    \n    // Prevent stage dragging\n    e.target.getStage().draggable(false);\n    \n    setIsDrawing(true);\n    const pos = e.target.getStage().getPointerPosition();\n    setCurrentPath([pos.x, pos.y]);\n  }, [tool]);\n\n  const handleMouseMove = useCallback((e) => {\n    if (!isDrawing || tool !== 'pen') return;\n\n    // Prevent default touch behaviors\n    e.evt?.preventDefault();\n    \n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    \n    // Add point only if it's different enough from the last point (reduces jitter)\n    setCurrentPath(prev => {\n      if (prev.length >= 2) {\n        const lastX = prev[prev.length - 2];\n        const lastY = prev[prev.length - 1];\n        const distance = Math.sqrt((point.x - lastX) ** 2 + (point.y - lastY) ** 2);\n        \n        // Only add point if moved enough (reduces noise)\n        if (distance > 1) {\n          return [...prev, point.x, point.y];\n        }\n        return prev;\n      }\n      return [...prev, point.x, point.y];\n    });\n  }, [isDrawing, tool]);\n\n  const handleMouseUp = useCallback((e) => {\n    if (!isDrawing || tool !== 'pen') {\n      setIsDrawing(false);\n      setCurrentPath([]);\n      return;\n    }\n\n    // Prevent default touch behaviors\n    e.evt?.preventDefault();\n\n    if (currentPath.length >= 4) {\n      const newStroke = {\n        id: Date.now() + Math.random(),\n        points: currentPath,\n        color: color,\n        strokeWidth: strokeWidth,\n        tool: tool,\n        timestamp: Date.now()\n      };\n\n      onDrawing(newStroke);\n    }\n    \n    setIsDrawing(false);\n    setCurrentPath([]);\n  }, [isDrawing, tool, currentPath, color, strokeWidth, onDrawing]);\n\n  // Combine drawing data with current drawing path\n  const allLines = [\n    ...drawingData,\n    ...(isDrawing && currentPath.length >= 4 ? [{\n      id: 'current',\n      points: currentPath,\n      color: color,\n      strokeWidth: strokeWidth,\n      tool: tool\n    }] : [])\n  ];\n\n  return (\n    <div className=\"whiteboard\" style={{ flex: 1, overflow: 'hidden' }}>\n      <Stage\n        width={1200}\n        height={2400}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        ref={stageRef}\n        draggable={false}\n        style={{ \n          border: '2px solid #ddd',\n          background: 'white',\n          cursor: tool === 'pen' ? 'crosshair' : 'default',\n          touchAction: 'none'\n        }}\n      >\n        <Layer>\n          {allLines.map((line) => (\n            <Line\n              key={line.id}\n              points={line.points}\n              stroke={line.color || '#000000'}\n              strokeWidth={line.strokeWidth || 2}\n              tension={0.5}\n              lineCap=\"round\"\n              lineJoin=\"round\"\n              globalCompositeOperation=\"source-over\"\n              perfectDrawEnabled={false}\n              shadowForStrokeEnabled={false}\n            />\n          ))}\n        </Layer>\n      </Stage>\n    </div>\n  );\n};\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}