{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eniac\\\\Desktop\\\\wrtc\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useState } from 'react';\nimport './App.css';\nimport ConnectionPanel from './components/ConnectionPanel';\nimport PageManager from './components/PageManager';\nimport Toolbar from './components/Toolbar';\nimport Whiteboard from './components/Whiteboard';\nimport WebRTCManager from './services/WebRTCManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionId, setConnectionId] = useState('');\n  const [isHost, setIsHost] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [currentTool, setCurrentTool] = useState('pen');\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  const [drawingData, setDrawingData] = useState([[]]);\n  const webrtcManagerRef = useRef(null);\n  const handleConnection = useCallback(async (roomId, isHostRole) => {\n    try {\n      setConnectionId(roomId);\n      setIsHost(isHostRole);\n      setIsConnecting(true);\n      if (!webrtcManagerRef.current) {\n        webrtcManagerRef.current = new WebRTCManager();\n      }\n      webrtcManagerRef.current.onDataReceived = data => {\n        handleRemoteDrawing(data);\n      };\n      webrtcManagerRef.current.onConnectionStateChange = connected => {\n        setIsConnected(connected);\n        if (!connected) {\n          setIsConnecting(false);\n        }\n      };\n      await webrtcManagerRef.current.initialize(roomId, isHostRole);\n      if (isHostRole) {\n        // For host, show the room ID immediately so they can share it\n        console.log('Room created! Share this Room ID:', roomId);\n      }\n    } catch (error) {\n      console.error('Connection failed:', error);\n      alert('Failed to establish connection: ' + error.message);\n      setIsConnecting(false);\n      setConnectionId('');\n    }\n  }, []);\n  const handleRemoteDrawing = data => {\n    if (data.type === 'drawing') {\n      setDrawingData(prev => {\n        const newData = [...prev];\n        while (newData.length <= data.page) {\n          newData.push([]);\n        }\n        newData[data.page] = [...newData[data.page], data.stroke];\n        return newData;\n      });\n    } else if (data.type === 'clear') {\n      setDrawingData(prev => {\n        const newData = [...prev];\n        if (newData[data.page]) {\n          newData[data.page] = [];\n        }\n        return newData;\n      });\n    } else if (data.type === 'pageChange') {\n      setTotalPages(Math.max(totalPages, data.totalPages));\n    }\n  };\n  const handleLocalDrawing = stroke => {\n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'drawing',\n        stroke: stroke,\n        page: currentPage\n      });\n    }\n    setDrawingData(prev => {\n      const newData = [...prev];\n      while (newData.length <= currentPage) {\n        newData.push([]);\n      }\n      newData[currentPage] = [...newData[currentPage], stroke];\n      return newData;\n    });\n  };\n  const handleClearPage = () => {\n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'clear',\n        page: currentPage\n      });\n    }\n    setDrawingData(prev => {\n      const newData = [...prev];\n      if (newData[currentPage]) {\n        newData[currentPage] = [];\n      }\n      return newData;\n    });\n  };\n  const handlePageChange = pageIndex => {\n    setCurrentPage(pageIndex);\n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'pageChange',\n        page: pageIndex,\n        totalPages: Math.max(totalPages, pageIndex + 1)\n      });\n    }\n  };\n  const addNewPage = () => {\n    const newPageIndex = totalPages;\n    setTotalPages(prev => prev + 1);\n    setDrawingData(prev => [...prev, []]);\n    setCurrentPage(newPageIndex);\n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'pageChange',\n        page: newPageIndex,\n        totalPages: totalPages + 1\n      });\n    }\n  };\n  const handleDisconnect = () => {\n    if (webrtcManagerRef.current) {\n      webrtcManagerRef.current.disconnect();\n    }\n    setIsConnected(false);\n    setIsConnecting(false);\n    setConnectionId('');\n    setIsHost(false);\n  };\n\n  // Show connection panel if not connected and no room ID\n  const showConnectionPanel = !connectionId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WebRTC Whiteboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: [isConnected ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"connected\",\n          children: [\"\\u2705 Connected - Room: \", connectionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this) : connectionId ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"connecting\",\n          children: [isConnecting ? '🔄 Connecting...' : '⏳ Waiting for peer', \" - Room: \", connectionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"disconnected\",\n          children: \"\\u274C Not Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), connectionId && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDisconnect,\n          className: \"disconnect-btn\",\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), showConnectionPanel ? /*#__PURE__*/_jsxDEV(ConnectionPanel, {\n      onConnect: handleConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this) : isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"whiteboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n          currentTool: currentTool,\n          setCurrentTool: setCurrentTool,\n          currentColor: currentColor,\n          setCurrentColor: setCurrentColor,\n          strokeWidth: strokeWidth,\n          setStrokeWidth: setStrokeWidth,\n          onClear: handleClearPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PageManager, {\n          currentPage: currentPage,\n          totalPages: totalPages,\n          onPageChange: handlePageChange,\n          onAddPage: addNewPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Whiteboard, {\n        tool: currentTool,\n        color: currentColor,\n        strokeWidth: strokeWidth,\n        onDrawing: handleLocalDrawing,\n        drawingData: drawingData[currentPage] || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waiting-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isHost ? 'Room Created!' : 'Joining Room...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Room ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-id-display\",\n            children: connectionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigator.clipboard.writeText(connectionId),\n            className: \"copy-btn\",\n            children: \"\\uD83D\\uDCCB Copy Room ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), isHost ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Share this Room ID with the other person:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Send them the Room ID: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: connectionId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Have them open this app and click \\\"Join Room\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"They should enter the Room ID and click \\\"Join Room\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"You'll be connected automatically!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Connecting to room: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: connectionId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for the host to be online...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDisconnect,\n          className: \"back-btn\",\n          children: \"\\u2190 Back to Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eihUJv+i684gxDbS0rzm5Th+B3w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useRef","useState","ConnectionPanel","PageManager","Toolbar","Whiteboard","WebRTCManager","jsxDEV","_jsxDEV","App","_s","isConnected","setIsConnected","connectionId","setConnectionId","isHost","setIsHost","isConnecting","setIsConnecting","currentTool","setCurrentTool","currentColor","setCurrentColor","strokeWidth","setStrokeWidth","currentPage","setCurrentPage","totalPages","setTotalPages","drawingData","setDrawingData","webrtcManagerRef","handleConnection","roomId","isHostRole","current","onDataReceived","data","handleRemoteDrawing","onConnectionStateChange","connected","initialize","console","log","error","alert","message","type","prev","newData","length","page","push","stroke","Math","max","handleLocalDrawing","sendData","handleClearPage","handlePageChange","pageIndex","addNewPage","newPageIndex","handleDisconnect","disconnect","showConnectionPanel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onConnect","onClear","onPageChange","onAddPage","tool","color","onDrawing","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["C:/Users/eniac/Desktop/wrtc/src/App.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport './App.css';\nimport ConnectionPanel from './components/ConnectionPanel';\nimport PageManager from './components/PageManager';\nimport Toolbar from './components/Toolbar';\nimport Whiteboard from './components/Whiteboard';\nimport WebRTCManager from './services/WebRTCManager';\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionId, setConnectionId] = useState('');\n  const [isHost, setIsHost] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [currentTool, setCurrentTool] = useState('pen');\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1);\n  const [drawingData, setDrawingData] = useState([[]]);\n  \n  const webrtcManagerRef = useRef(null);\n\n  const handleConnection = useCallback(async (roomId, isHostRole) => {\n    try {\n      setConnectionId(roomId);\n      setIsHost(isHostRole);\n      setIsConnecting(true);\n      \n      if (!webrtcManagerRef.current) {\n        webrtcManagerRef.current = new WebRTCManager();\n      }\n      \n      webrtcManagerRef.current.onDataReceived = (data) => {\n        handleRemoteDrawing(data);\n      };\n      \n      webrtcManagerRef.current.onConnectionStateChange = (connected) => {\n        setIsConnected(connected);\n        if (!connected) {\n          setIsConnecting(false);\n        }\n      };\n      \n      await webrtcManagerRef.current.initialize(roomId, isHostRole);\n      \n      if (isHostRole) {\n        // For host, show the room ID immediately so they can share it\n        console.log('Room created! Share this Room ID:', roomId);\n      }\n    } catch (error) {\n      console.error('Connection failed:', error);\n      alert('Failed to establish connection: ' + error.message);\n      setIsConnecting(false);\n      setConnectionId('');\n    }\n  }, []);\n\n  const handleRemoteDrawing = (data) => {\n    if (data.type === 'drawing') {\n      setDrawingData(prev => {\n        const newData = [...prev];\n        while (newData.length <= data.page) {\n          newData.push([]);\n        }\n        newData[data.page] = [...newData[data.page], data.stroke];\n        return newData;\n      });\n    } else if (data.type === 'clear') {\n      setDrawingData(prev => {\n        const newData = [...prev];\n        if (newData[data.page]) {\n          newData[data.page] = [];\n        }\n        return newData;\n      });\n    } else if (data.type === 'pageChange') {\n      setTotalPages(Math.max(totalPages, data.totalPages));\n    }\n  };\n\n  const handleLocalDrawing = (stroke) => {\n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'drawing',\n        stroke: stroke,\n        page: currentPage\n      });\n    }\n    \n    setDrawingData(prev => {\n      const newData = [...prev];\n      while (newData.length <= currentPage) {\n        newData.push([]);\n      }\n      newData[currentPage] = [...newData[currentPage], stroke];\n      return newData;\n    });\n  };\n\n  const handleClearPage = () => {\n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'clear',\n        page: currentPage\n      });\n    }\n    \n    setDrawingData(prev => {\n      const newData = [...prev];\n      if (newData[currentPage]) {\n        newData[currentPage] = [];\n      }\n      return newData;\n    });\n  };\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n    \n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'pageChange',\n        page: pageIndex,\n        totalPages: Math.max(totalPages, pageIndex + 1)\n      });\n    }\n  };\n\n  const addNewPage = () => {\n    const newPageIndex = totalPages;\n    setTotalPages(prev => prev + 1);\n    setDrawingData(prev => [...prev, []]);\n    setCurrentPage(newPageIndex);\n    \n    if (webrtcManagerRef.current && isConnected) {\n      webrtcManagerRef.current.sendData({\n        type: 'pageChange',\n        page: newPageIndex,\n        totalPages: totalPages + 1\n      });\n    }\n  };\n\n  const handleDisconnect = () => {\n    if (webrtcManagerRef.current) {\n      webrtcManagerRef.current.disconnect();\n    }\n    setIsConnected(false);\n    setIsConnecting(false);\n    setConnectionId('');\n    setIsHost(false);\n  };\n\n  // Show connection panel if not connected and no room ID\n  const showConnectionPanel = !connectionId;\n  \n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>WebRTC Whiteboard</h1>\n        <div className=\"connection-status\">\n          {isConnected ? (\n            <span className=\"connected\">✅ Connected - Room: {connectionId}</span>\n          ) : connectionId ? (\n            <span className=\"connecting\">\n              {isConnecting ? '🔄 Connecting...' : '⏳ Waiting for peer'} - Room: {connectionId}\n            </span>\n          ) : (\n            <span className=\"disconnected\">❌ Not Connected</span>\n          )}\n          {connectionId && (\n            <button onClick={handleDisconnect} className=\"disconnect-btn\">\n              Disconnect\n            </button>\n          )}\n        </div>\n      </header>\n      \n      {showConnectionPanel ? (\n        <ConnectionPanel onConnect={handleConnection} />\n      ) : isConnected ? (\n        <div className=\"whiteboard-container\">\n          <div className=\"controls\">\n            <Toolbar\n              currentTool={currentTool}\n              setCurrentTool={setCurrentTool}\n              currentColor={currentColor}\n              setCurrentColor={setCurrentColor}\n              strokeWidth={strokeWidth}\n              setStrokeWidth={setStrokeWidth}\n              onClear={handleClearPage}\n            />\n            <PageManager\n              currentPage={currentPage}\n              totalPages={totalPages}\n              onPageChange={handlePageChange}\n              onAddPage={addNewPage}\n            />\n          </div>\n          \n          <Whiteboard\n            tool={currentTool}\n            color={currentColor}\n            strokeWidth={strokeWidth}\n            onDrawing={handleLocalDrawing}\n            drawingData={drawingData[currentPage] || []}\n          />\n        </div>\n      ) : (\n        <div className=\"waiting-screen\">\n          <div className=\"waiting-card\">\n            <h2>{isHost ? 'Room Created!' : 'Joining Room...'}</h2>\n            <div className=\"room-display\">\n              <label>Room ID:</label>\n              <div className=\"room-id-display\">{connectionId}</div>\n              <button \n                onClick={() => navigator.clipboard.writeText(connectionId)}\n                className=\"copy-btn\"\n              >\n                📋 Copy Room ID\n              </button>\n            </div>\n            {isHost ? (\n              <div className=\"instructions\">\n                <p>Share this Room ID with the other person:</p>\n                <ol>\n                  <li>Send them the Room ID: <strong>{connectionId}</strong></li>\n                  <li>Have them open this app and click \"Join Room\"</li>\n                  <li>They should enter the Room ID and click \"Join Room\"</li>\n                  <li>You'll be connected automatically!</li>\n                </ol>\n              </div>\n            ) : (\n              <div className=\"instructions\">\n                <p>Connecting to room: <strong>{connectionId}</strong></p>\n                <p>Waiting for the host to be online...</p>\n              </div>\n            )}\n            <button onClick={handleDisconnect} className=\"back-btn\">\n              ← Back to Connection\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}